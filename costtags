import boto3
import json
import awspricing
from pkg_resources import resource_filename


def get_ec2_instance_hourly_price():
              
    client = boto3.client('ec2')
    
    response = client.describe_instances()
    ec2_resource = boto3.resource('ec2')
    
    #print(instance) 

    
    #all_ec2_instances = response['Instances']

    for r in response['Reservations']:
        for i in r['Instances']:

            print(i['InstanceId'])
            print(i['InstanceType'])
            print(i['PlatformDetails'])

            instanceId = i['InstanceId']
            instanceType = i['InstanceType']
            instancePlatform = i['PlatformDetails']
#            ec2_offer = awspricing.offer('AmazonEC2')
            instancePrice = get_price(instanceType, 'Linux')
#            instancePrice = ec2_offer.ondemand_hourly(instanceType, operating_system ='Linux', region='eu-central-1')
            print(instancePrice)

    
#            response = boto3.tag_resources(
#            ResourceARNList=[instanceId],
#              Tags={
#              'price': instancePrice
#           }
#    )
#
#
#    filters = [
#        {'Type': 'TERM_MATCH', 'Field': 'termType', 'Value': 'OnDemand'},
#    ]
#
#    pricing_client = boto3.client('pricing', region_name='us-east-1')
#    
#
#    
#    response = pricing_client.get_products(ServiceCode='AmazonEC2', Filters=filters)
#    response2 = pricing_client.describe_services(ServiceCode='AmazonEC2')
#
#
#    print(response2)
#
#
#
#    for price in response['PriceList']:
#        price = json.loads(price)
#
#        for on_demand in price['terms']['OnDemand'].values():
#            for price_dimensions in on_demand['priceDimensions'].values():
#                price_value = price_dimensions['pricePerUnit']['USD']
#                
#                print(price_value)
#            
#        return float(price_value)
    return 1


def get_price(instance_type, operating_system):
                                       
    region_name = "eu-central-1"

    
    filters = [
        {'Type': 'TERM_MATCH', 'Field': 'termType', 'Value': 'OnDemand'},
        {'Type': 'TERM_MATCH', 'Field': 'location', 'Value': region_name},
        {'Type': 'TERM_MATCH', 'Field': 'instanceType', 'Value': instance_type},
        {'Type': 'TERM_MATCH', 'Field': 'operatingSystem', 'Value': operating_system},
    ]

    pricing_client = boto3.client('pricing', region_name='us-east-1')
    
    response = pricing_client.get_products(ServiceCode='AmazonEC2', Filters=filters)

    for price in response['PriceList']:
        price = json.loads(price)

        for on_demand in price['terms']['OnDemand'].values():
            for price_dimensions in on_demand['priceDimensions'].values():
                price_value = price_dimensions['pricePerUnit']['USD']
            
        return float(price_value)
    return None


ec2_instance_price = get_ec2_instance_hourly_price()
print(ec2_instance_price)